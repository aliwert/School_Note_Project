<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>