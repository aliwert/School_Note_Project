<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>