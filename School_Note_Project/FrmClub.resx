<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        O54d9t1YpYAAAAAASUVORK5CYII=
</value>
  </data>
</root>